<?php

/**
 * Quote
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    balloon
 * @subpackage model
 * @author     Clément JOBEILI <clement.jobeili@gmail.com>
 * @version    SVN: $Id$
 */
class Quote extends BaseQuote
{
  /**
   * Alias to setValidated
   *
   * @return void
   * @author Clément JOBEILI
   */
  public function validate()
  {
    $this->setIsValidated(true);
    $this->save();
  }
  
  /**
   * Alias to getIsValidated
   *
   * @return boolean
   * @author Clément JOBEILI
   */
  public function isValidated()
  {
    return $this->getIsValidated();
  }
  
  /**
   * Alias to getIsPoll
   *
   * @return boolean
   * @author Clément JOBEILI
   */
  public function isSurvey()
  {
    return $this->getIsPoll();
  }
  
  /**
   * check if the quote is active 
   * 
   * That's mean if the quote(which is a survey) is open to vote
   *
   * @return boolean
   * @author Clément JOBEILI
   */
  public function isActive()
  {
    $createAt = new Datetime($this->getCreatedAt());
    
    $duration = $this->getPollDuration();
    $now = new Datetime();

    $createAt->add(new DateInterval('P0Y0DT0H'.$duration.'M'));
    
    if($createAt < $now){
      return false;
    }
    
    return true;
  }

  /**
   * Returns the rest of the time available for the poll
   *
   * @todo not yet tested
   * @return DateInterval
   * @author Clément JOBEILI
   */
  public function getPollTimeLeft()
  {
    $createAt = new Datetime($this->getCreatedAt());
    
    $duration = $this->getPollDuration();
    $now = new Datetime();

    $createAt->add(new DateInterval('P0Y0DT0H'.$duration.'M'));

    return $now->diff($createdAt);
  }
  
  public function getTotalPollAnswer()
  {
    $total = 0;
    foreach ($this->getPollChoices() as $k => $v) {
      $total += $v->getAnswers()->count();
    }
    return $total;
  }
  
  /**
   * Proxy method, return true if this quote has answers.
   *
   * @return void
   * @author Clément JOBEILI
   */
  public function hasAnswers()
  {
    return ($this->getAnswers()->count()) ? true : false;
  }
}
