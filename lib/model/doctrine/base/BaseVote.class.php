<?php

/**
 * BaseVote
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $quote_id
 * @property integer $user_id
 * @property string $token
 * @property Quote $Quote
 * @property sfGuardUser $User
 * 
 * @method integer     getQuoteId()  Returns the current record's "quote_id" value
 * @method integer     getUserId()   Returns the current record's "user_id" value
 * @method string      getToken()    Returns the current record's "token" value
 * @method Quote       getQuote()    Returns the current record's "Quote" value
 * @method sfGuardUser getUser()     Returns the current record's "User" value
 * @method Vote        setQuoteId()  Sets the current record's "quote_id" value
 * @method Vote        setUserId()   Sets the current record's "user_id" value
 * @method Vote        setToken()    Sets the current record's "token" value
 * @method Vote        setQuote()    Sets the current record's "Quote" value
 * @method Vote        setUser()     Sets the current record's "User" value
 * 
 * @package    balloon
 * @subpackage model
 * @author     ClÃ©ment JOBEILI <clement.jobeili@gmail.com>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseVote extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('vote');
        $this->hasColumn('quote_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('token', 'string', 40, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 40,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Quote', array(
             'local' => 'quote_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $countcache0 = new CountCache(array(
             'relations' => 
             array(
              'Quote' => 
              array(
              'columnName' => 'votes_count',
              'foreignAlias' => 'Votes',
              ),
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($countcache0);
    }
}