<?php

/**
 * BaseAuth
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $event_id
 * @property integer $group_id
 * @property sfGuardUser $User
 * @property Event $Event
 * @property AuthGroup $Group
 * 
 * @method integer     getUserId()   Returns the current record's "user_id" value
 * @method integer     getEventId()  Returns the current record's "event_id" value
 * @method integer     getGroupId()  Returns the current record's "group_id" value
 * @method sfGuardUser getUser()     Returns the current record's "User" value
 * @method Event       getEvent()    Returns the current record's "Event" value
 * @method AuthGroup   getGroup()    Returns the current record's "Group" value
 * @method Auth        setUserId()   Sets the current record's "user_id" value
 * @method Auth        setEventId()  Sets the current record's "event_id" value
 * @method Auth        setGroupId()  Sets the current record's "group_id" value
 * @method Auth        setUser()     Sets the current record's "User" value
 * @method Auth        setEvent()    Sets the current record's "Event" value
 * @method Auth        setGroup()    Sets the current record's "Group" value
 * 
 * @package    balloon
 * @subpackage model
 * @author     ClÃ©ment JOBEILI <clement.jobeili@gmail.com>
 * @version    SVN: $Id$
 */
abstract class BaseAuth extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('auth');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('event_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('group_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('AuthGroup as Group', array(
             'local' => 'group_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}