<?php

/**
 * BaseSubscription
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $event_id
 * @property integer $selected_offer
 * @property sfGuardUser $User
 * @property Event $Event
 * 
 * @method integer      getUserId()         Returns the current record's "user_id" value
 * @method integer      getEventId()        Returns the current record's "event_id" value
 * @method integer      getSelectedOffer()  Returns the current record's "selected_offer" value
 * @method sfGuardUser  getUser()           Returns the current record's "User" value
 * @method Event        getEvent()          Returns the current record's "Event" value
 * @method Subscription setUserId()         Sets the current record's "user_id" value
 * @method Subscription setEventId()        Sets the current record's "event_id" value
 * @method Subscription setSelectedOffer()  Sets the current record's "selected_offer" value
 * @method Subscription setUser()           Sets the current record's "User" value
 * @method Subscription setEvent()          Sets the current record's "Event" value
 * 
 * @package    balloon
 * @subpackage model
 * @author     ClÃ©ment JOBEILI <clement.jobeili@gmail.com>
 * @version    SVN: $Id$
 */
abstract class BaseSubscription extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('subscription');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('event_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('selected_offer', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}